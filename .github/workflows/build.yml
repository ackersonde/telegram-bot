name: Deploy telegram bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      ca_pub_fingerprint:
        description: fingerprint of CA signed user cert
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN: ${{ secrets.CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN }}
      CTX_DIGITALOCEAN_FIREWALL: ${{ secrets.CTX_DIGITALOCEAN_FIREWALL }}
      CTX_SSH_DEPLOY_FINGERPRINT: ${{ secrets.CTX_SSH_DEPLOY_FINGERPRINT }}
      MY_CA: /root/my-ca
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Build application and docker image
        run: |
          go get -t -d -v ./...

          # need to disable module builds here until go-telegram-bot-api/telegram-bot-api
          # upgrades from v4.6.4 to 5.0 with some documentation and mod support
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=off go build telegram.go

          docker build --compress -t danackerson/telegram-bot:vg$GITHUB_RUN_ID .

          docker login -u ${{ secrets.CTX_DOCKER_USER }} -p ${{ secrets.CTX_DOCKER_PASS }}
          docker tag danackerson/telegram-bot:vg$GITHUB_RUN_ID danackerson/telegram-bot:latest
          docker push danackerson/telegram-bot:vg$GITHUB_RUN_ID
          docker push danackerson/telegram-bot:latest

      - name: Deploy to DigitalOcean
        run: |
          git clone https://github.com/ackersonde/digitaloceans.git
          cd digitaloceans
          go get -t -d -v ./...
          go build do.go
          cd ../

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./digitaloceans/do -fn=firewallSSH -allow=true -ip=$public_ip_address -tag=traefik

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          ${{ secrets.CTX_DIGITALOCEAN_SSH_PRIVKEY }}
          EOF
          chmod 400 ~/.ssh/id_rsa

          ssh -o StrictHostKeyChecking=no root@ackerson.de "\
            mkdir $MY_CA || true && \
            echo "${{ secrets.CTX_SERVER_DEPLOY_SECRET_B64 }}" | base64 --decode > $MY_CA/id_ed25519 && \
            chmod 600 $MY_CA/id_ed25519 && \
            echo "${{ secrets.CTX_SERVER_DEPLOY_CACERT_B64 }}" | base64 --decode > $MY_CA/id_ed25519-cert.pub && \
            chmod 600 $MY_CA/id_ed25519-cert.pub && \
            echo "${{ secrets.CTX_POPS4XL_SCP_KEY_SECRET_B64 }}" | base64 --decode > $MY_CA/id_rsa_pix4x && \
            chmod 600 $MY_CA/id_rsa_pix4x && \
            echo "${{ secrets.CTX_REMARKABLE_CLOUD_API_TOKENS_B64 }}" | base64 --decode > $MY_CA/remarkable_api_keys.conf && \
            echo "${{ secrets.REMARKABLE_SSH_HOST_KEY }}" > $MY_CA/remarkable_host_key && \
            docker login -u ${{ secrets.CTX_DOCKER_USER }} -p ${{ secrets.CTX_DOCKER_PASS }} && \
            docker rm -f telegram-bot || true && \
            docker run -d --restart=always \
              -e DARKSKY_API_KEY=${{ secrets.CTX_DARKSKY_API_KEY }} \
              -e GITHUB_RUN_ID=$GITHUB_RUN_ID \
              -e CTX_JOIN_API_KEY=${{ secrets.CTX_JOIN_API_KEY }} \
              -e CTX_PLEX_TOKEN=${{ secrets.CTX_PLEX_TOKEN }} \
              -e CTX_DIGITALOCEAN_TOKEN=${{ secrets.CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN }} \
              -e CTX_JOIN_API_KEY=${{ secrets.CTX_JOIN_API_KEY }} \
              -e CTX_DROPBOX_ACCESS_TOKEN=${{ secrets.CTX_DROPBOX_ACCESS_TOKEN }} \
              -e CTX_ETHERSCAN_API_KEY=${{ secrets.CTX_ETHERSCAN_API_KEY }} \
              -e CTX_ETHEREUM_ADDRESS_METAMASK=${{ secrets.CTX_ETHEREUM_ADDRESS_METAMASK }} \
              -e CTX_CURRENT_PGP_FINGERPRINT=${{ secrets.CTX_CURRENT_PGP_FINGERPRINT }} \
              -e CTX_STELLAR_LUMENS_ADDRESS=${{ secrets.CTX_STELLAR_LUMENS_ADDRESS }} \
              -e CTX_TELEGRAM_BOT_TOKEN=${{ secrets.CTX_TELEGRAM_BOT_TOKEN }} \
              -e TELEGRAM_BOT_WEB_URL=${{ secrets.TELEGRAM_BOT_WEB_URL }} \
              -e RMAPI_TRACE=0 \
              -v $MY_CA/id_ed25519:/root/.ssh/id_ed25519:ro \
              -v $MY_CA/id_ed25519-cert.pub:/root/.ssh/id_ed25519-cert.pub:ro \
              -v $MY_CA/id_rsa_pix4x:/root/.ssh/id_rsa_pix4x:ro \
              -v $MY_CA/remarkable_host_key:/root/.ssh/known_hosts:ro \
              -v $MY_CA/remarkable_api_keys.conf:/root/.rmapi \
              --label='traefik.enable=true' \
              --label='traefik.http.routers.telegram.tls.certResolver=letsencrypt' \
              --label='traefik.http.routers.telegram.tls.domains=${{ secrets.TELEGRAM_BOT_WEB_URL }}' \
              --label='traefik.http.routers.telegram.rule=Host(\`${{ secrets.TELEGRAM_BOT_WEB_URL }}\`) && Path(\`/${{secrets.CTX_TELEGRAM_BOT_TOKEN}}\`)' \
              --name telegram-bot danackerson/telegram-bot:vg$GITHUB_RUN_ID"

          rm -Rf ~/.ssh ~/.docker/config.json
          ./digitaloceans/do -fn=firewallSSH -allow=false -ip=$public_ip_address

          curl -s \
          --data parse_mode=HTML \
          --data disable_web_page_preview=true \
          --data chat_id=${{ secrets.TELEGRAM_GROUP_CHAT }} \
          --data text="Deployed <a href='https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID'>$GITHUB_REPOSITORY @ $GITHUB_RUN_ID</a>" \
          --request POST https://api.telegram.org/bot${{ secrets.CTX_TELEGRAM_BOT_TOKEN }}/sendMessage
