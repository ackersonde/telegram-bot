name: Deploy telegram bot

on:
  push:
    branches: [ main, hetzner ]
  workflow_dispatch:
    inputs:
      ca_pub_fingerprint:
        description: fingerprint of CA signed user cert
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      MY_CA: /root/my-ca
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Build application and docker image
        run: |
          go mod tidy
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build telegram.go

          docker build --compress -t danackerson/telegram-bot:vg$GITHUB_RUN_ID .

          export DUSER=$(echo ${{ secrets.ORG_DOCKER_USER }} | base64 -d)
          export DPASS=$(echo ${{ secrets.ORG_DOCKER_PASS }} | base64 -d)
          docker login -u $DUSER -p $DPASS

          docker tag danackerson/telegram-bot:vg$GITHUB_RUN_ID danackerson/telegram-bot:latest
          docker push danackerson/telegram-bot:vg$GITHUB_RUN_ID
          docker push danackerson/telegram-bot:latest

      - name: Deploy to Hetzner
        run: |
          export CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN=$(echo ${{ secrets.ORG_DIGITALOCEAN_DROPLET_PROXY_TOKEN }} | base64 -d)
          export CTX_DIGITALOCEAN_FIREWALL=$(echo ${{ secrets.ORG_DIGITALOCEAN_FIREWALL }} | base64 -d)
          export HETZNER_API_TOKEN=$(echo ${{ secrets.ORG_HETZNER_CLOUD_API_TOKEN }} | base64 -d)
          #export HETZNER_FIREWALL=$(echo ${{ secrets.ORG_HETZNER_HOME_FIREWALL }} | base64 -d)
          #export HETZNER_VAULT_VOLUME_ID=$(echo ${{ secrets.ORG_HETZNER_VAULT_VOLUME_ID }} | base64 -d)

          git clone https://github.com/ackersonde/hetzner_home.git
          cd hetzner_home
          go mod tidy
          go build hetzner.go
          cd ../

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./hetzner_home/hetzner -fn=firewallSSH -tag=homepage -ip=$public_ip_address

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          $(echo ${{ secrets.HETZNER_SSH_PRIVKEY }} | base64 -d)
          EOF
          chmod 400 ~/.ssh/id_rsa

          export ORG_ETHERSCAN_API_KEY=$(echo ${{ secrets.ORG_ETHERSCAN_API_KEY }} | base64 -d)
          export ORG_ETHEREUM_ADDRESS_METAMASK=$(echo ${{ secrets.ORG_ETHEREUM_ADDRESS_METAMASK }} | base64 -d)
          export ORG_CURRENT_PGP_FINGERPRINT=$(echo ${{ secrets.ORG_CURRENT_PGP_FINGERPRINT }} | base64 -d)
          export ORG_STELLAR_LUMENS_ADDRESS=$(echo ${{ secrets.ORG_STELLAR_LUMENS_ADDRESS }} | base64 -d)
          export ORG_TELEGRAM_BOT_TOKEN=$(echo ${{ secrets.ORG_TELEGRAM_BOT_TOKEN }} | base64 -d)
          export ORG_TELEGRAM_BOT_WEB_URL=$(echo ${{ secrets.ORG_TELEGRAM_BOT_WEB_URL }} | base64 -d)
          export ORG_TELEGRAM_GROUP_CHAT=$(echo ${{ secrets.ORG_TELEGRAM_GROUP_CHAT }} | base64 -d)

          ssh -o StrictHostKeyChecking=no root@168.119.170.94 "\
            mkdir $MY_CA || true && \
            echo "${{ secrets.ORG_SERVER_DEPLOY_SECRET }}" | base64 --decode > $MY_CA/id_ed25519 && \
            chmod 600 $MY_CA/id_ed25519 && \
            echo "${{ secrets.ORG_SERVER_DEPLOY_CACERT }}" | base64 --decode > $MY_CA/id_ed25519-cert.pub && \
            chmod 600 $MY_CA/id_ed25519-cert.pub && \
            echo "${{ secrets.ORG_REMARKABLE_CLOUD_API_TOKENS }}" | base64 --decode > $MY_CA/remarkable_api_keys.conf && \
            echo "${{ secrets.ORG_REMARKABLE_SSH_HOST_KEY }}" | base64 --decode > $MY_CA/remarkable_host_key && \
            docker rm -f telegram-bot || true && \
            docker run -d --restart=always \
              -e GITHUB_RUN_ID=$GITHUB_RUN_ID \
              -e ORG_ETHERSCAN_API_KEY=$ORG_ETHERSCAN_API_KEY \
              -e ORG_ETHEREUM_ADDRESS_METAMASK=$ORG_ETHEREUM_ADDRESS_METAMASK \
              -e ORG_CURRENT_PGP_FINGERPRINT=$ORG_CURRENT_PGP_FINGERPRINT \
              -e ORG_STELLAR_LUMENS_ADDRESS=$ORG_STELLAR_LUMENS_ADDRESS \
              -e ORG_TELEGRAM_BOT_TOKEN=$ORG_TELEGRAM_BOT_TOKEN \
              -e ORG_TELEGRAM_BOT_WEB_URL=$ORG_TELEGRAM_BOT_WEB_URL \
              -e RMAPI_TRACE=0 \
              -v $MY_CA/id_ed25519:/root/.ssh/id_ed25519:ro \
              -v $MY_CA/id_ed25519-cert.pub:/root/.ssh/id_ed25519-cert.pub:ro \
              -v $MY_CA/id_rsa_pix4x:/root/.ssh/id_rsa_pix4x:ro \
              -v $MY_CA/remarkable_host_key:/root/.ssh/known_hosts:ro \
              -v $MY_CA/remarkable_api_keys.conf:/root/.rmapi \
              --label='traefik.enable=true' \
              --label='traefik.http.routers.telegram.middlewares=secHeaders@file' \
              --label='traefik.http.routers.telegram.tls.certResolver=letsencrypt' \
              --label='traefik.http.routers.telegram.tls.domains=$ORG_TELEGRAM_BOT_WEB_URL' \
              --label='traefik.http.routers.telegram.rule=Host(\`$ORG_TELEGRAM_BOT_WEB_URL\`) && Path(\`/$ORG_TELEGRAM_BOT_TOKEN\`)' \
              --name telegram-bot danackerson/telegram-bot:vg$GITHUB_RUN_ID"

          rm -Rf ~/.ssh ~/.docker/config.json
          ./hetzner_home/hetzner -fn=cleanupDeploy -tag=homepage

          curl -s \
          --data parse_mode=HTML \
          --data disable_web_page_preview=true \
          --data chat_id=$ORG_TELEGRAM_GROUP_CHAT \
          --data text="Deployed <a href='https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID'>$GITHUB_REPOSITORY @ $GITHUB_RUN_ID</a>" \
          --request POST https://api.telegram.org/bot$ORG_TELEGRAM_BOT_TOKEN/sendMessage
